static method cant be abstract

----------------------------------------------------------
//Day 1

1. Java Editions
	Java ME
	Java SE
	Java EE

2. Java Compilation and Exectution

3. JDK , JRE , JVM

4. Meaning of -  
	1. public static void main (String[] args)
	2. System.out.println();

5. Class and Object

6. Datatypes -
	1. Primitive (on stack)
	2. Reference (on heap) ,
	Note - Reference variable gets space (on stack)

	Person p = new Person(); 

	- p (the reference) lives on the stack (if inside a method).

	- The actual new Person() object lives on the heap.

	- If Person has primitive fields, those are stored inside that heap object.

7. Main method in java can be overloaded

8. Scanner (java.util)

9. Widening and Narrowing

10. System class (java.lang)

11. Naming conventions (day1 pdf)

12. sizes of datatypes -
 boolean - not specified
 byte - 1 byte 
 char - 2
 short - 2
 int - 4
 long - 8
 float - 4
 double - 8

13. escape sequences

//Day 2

1. Wrapper Classes --> Uses Collection and Generics

2. Boxing - (Primitive to Wrapper)
   Unboxing (Wrapper to Primitive)

   Autoboxing and Autounboxing (Java 5.0)

   //String.valueOf(10)  --> Boxing
   //Integer.parseInt("10") --> Unboxing

3. Loops
	//Difference between while loop and do-while loop 
	1. for loop (entry control loop)
	2. while loop (entry control loop)
	3. do-while loop (exit control loop)
	4. forEach loop (Internally uses Iterator)
	5.Labelled Loops

4. Message Passing

5. Diagram of Message Passing
	1. Method Area
	2. Heap
	3. Stack

6. Characteristics of Object
	SBI

7. this reference -
	- using this reference non-static fields and and non static methods communicate

8. Major Pillars - 
	Hierarchy - Inheritance
	Encapsulation
	Modularity - Packages
	Abstraction 

9. Minor Pillars - 
	Typing - Polymorphism
	Concurrency - Multithreading
	Persistence - File IO

10. Tester Class

11. Singelton Class

12. Constructor chaining

13. Java buzz words

Simple
Object Oriented
Distributed
Compiled and Interpreted
Robust
Dynamic

14. 
 setter - mutators
 getter - inspectors 
 facilitators (eg. obj.display)

15. Calendar class

16. Initialization (once) and Assignment(multiple times)

17. Constructor - used to initialize instance

18. Constructor chaining (using this reference) 


//Day 3

1. Packages

2. Access Modifiers 
 (Consider diagram of 2 seperate packages)
 1.private(lowest)
 2.default
 3.protected
 4.public

3.Arrays

4. Array of non primitive type i.e reference

5.2D Arrays

6.Ragged Array

7. Variable arity method

8. Method overloading (NTO)
 Number of arguments 
 Type of arguments
 Order of arguments

 -static merhods can be overloaded 
 - return type is not considers -> catching values frim function is optional

9. How to achieve call by address in java -> using arrays

10. Object class - 
 Every class in java is directly and indirectly inherited from Object class
